{"uid":"c94f03febfc2e15e","name":"Fetch all available products and validate DB","fullName":"Product Service API with DB Validation: Fetch all available products and validate DB","historyId":"5c075957ff541738c8c24fa46ac1f327","time":{"start":1752878909811,"stop":1752878913955,"duration":4144},"status":"failed","statusMessage":"AssertionError: Expected 200 but got 403\n","statusTrace":"  File \"/usr/local/lib/python3.10/site-packages/behave/model.py\", line 1329, in run\n    match.run(runner.context)\n  File \"/usr/local/lib/python3.10/site-packages/behave/matchers.py\", line 98, in run\n    self.func(context, *args, **kwargs)\n  File \"/app/utils/retry.py\", line 23, in wrapper\n    raise last_exception\n  File \"/app/utils/retry.py\", line 17, in wrapper\n    return func(*args, **kwargs)\n  File \"features/steps/api_steps.py\", line 11, in step_when_fetch_products\n    assert context.response.status_code == 200, f\"Expected 200 but got {context.response.status_code}\"\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: Expected 200 but got 403\n","statusTrace":"  File \"/usr/local/lib/python3.10/site-packages/behave/model.py\", line 1329, in run\n    match.run(runner.context)\n  File \"/usr/local/lib/python3.10/site-packages/behave/matchers.py\", line 98, in run\n    self.func(context, *args, **kwargs)\n  File \"/app/utils/retry.py\", line 23, in wrapper\n    raise last_exception\n  File \"/app/utils/retry.py\", line 17, in wrapper\n    return func(*args, **kwargs)\n  File \"features/steps/api_steps.py\", line 11, in step_when_fetch_products\n    assert context.response.status_code == 200, f\"Expected 200 but got {context.response.status_code}\"\n","steps":[{"name":"When I fetch the list of products","time":{"start":1752878909813,"stop":1752878913954,"duration":4141},"status":"failed","statusMessage":"AssertionError: Expected 200 but got 403\n","statusTrace":"  File \"/usr/local/lib/python3.10/site-packages/behave/model.py\", line 1329, in run\n    match.run(runner.context)\n  File \"/usr/local/lib/python3.10/site-packages/behave/matchers.py\", line 98, in run\n    self.func(context, *args, **kwargs)\n  File \"/app/utils/retry.py\", line 23, in wrapper\n    raise last_exception\n  File \"/app/utils/retry.py\", line 17, in wrapper\n    return func(*args, **kwargs)\n  File \"features/steps/api_steps.py\", line 11, in step_when_fetch_products\n    assert context.response.status_code == 200, f\"Expected 200 but got {context.response.status_code}\"\n","steps":[],"attachments":[{"uid":"126c1de3db12c87b","name":"API Request & Response","source":"126c1de3db12c87b.txt","type":"text/plain","size":6690},{"uid":"a28a08ef5a434ac9","name":"API Request & Response","source":"a28a08ef5a434ac9.txt","type":"text/plain","size":6699},{"uid":"44f67f69ffb85a53","name":"API Request & Response","source":"44f67f69ffb85a53.txt","type":"text/plain","size":6699}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":3,"hasContent":true},{"name":"Then I should receive a successful response","time":{"start":1752878913955,"stop":1752878913955,"duration":0},"status":"skipped","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"And the response should contain one or more products","time":{"start":1752878913955,"stop":1752878913955,"duration":0},"status":"skipped","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"And the database should contain the same number of products","time":{"start":1752878913955,"stop":1752878913955,"duration":0},"status":"skipped","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"And product with id 1 should exist in the database","time":{"start":1752878913955,"stop":1752878913955,"duration":0},"status":"skipped","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[{"uid":"e578c6c8f258f033","name":"Execution Log","source":"e578c6c8f258f033.txt","type":"text/plain","size":20877}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":5,"attachmentsCount":4,"hasContent":true},"afterStages":[],"labels":[{"name":"severity","value":"normal"},{"name":"tag","value":"api"},{"name":"tag","value":"db"},{"name":"feature","value":"Product Service API with DB Validation"},{"name":"framework","value":"behave"},{"name":"language","value":"cpython3"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["api","db"]},"source":"c94f03febfc2e15e.json","parameterValues":[]}